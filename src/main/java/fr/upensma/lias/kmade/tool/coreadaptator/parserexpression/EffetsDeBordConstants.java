/*********************************************************************************
* This file is part of KMADe Project.
* Copyright (C) 2006  INRIA - MErLIn Project and LISI - ENSMA
* 
* KMADe is free software: you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* KMADe is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
* 
* You should have received a copy of the GNU Lesser General Public License
* along with KMADe.  If not, see <http://www.gnu.org/licenses/>.
**********************************************************************************/
package fr.upensma.lias.kmade.tool.coreadaptator.parserexpression;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EffetsDeBordConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int REMOVE = 4;
  /** RegularExpression Id. */
  int SET = 5;
  /** RegularExpression Id. */
  int ADD = 6;
  /** RegularExpression Id. */
  int CREATE = 7;
  /** RegularExpression Id. */
  int REPLACE = 8;
  /** RegularExpression Id. */
  int GETVALUE = 9;
  /** RegularExpression Id. */
  int UNKNOWN_NUMBER = 10;
  /** RegularExpression Id. */
  int UNKNOWN_STRING = 11;
  /** RegularExpression Id. */
  int UNKNOWN_BOOLEAN = 12;
  /** RegularExpression Id. */
  int VOID_TYPE = 13;
  /** RegularExpression Id. */
  int PARO = 14;
  /** RegularExpression Id. */
  int PARF = 15;
  /** RegularExpression Id. */
  int COMA = 16;
  /** RegularExpression Id. */
  int SEQUENCE = 17;
  /** RegularExpression Id. */
  int ASSIGNMENT = 18;
  /** RegularExpression Id. */
  int PLUS = 19;
  /** RegularExpression Id. */
  int MINUS = 20;
  /** RegularExpression Id. */
  int PLUS_ASSIGNMENT = 21;
  /** RegularExpression Id. */
  int MINUS_ASSIGNMENT = 22;
  /** RegularExpression Id. */
  int EOL = 23;
  /** RegularExpression Id. */
  int DIGIT = 24;
  /** RegularExpression Id. */
  int LETTER = 25;
  /** RegularExpression Id. */
  int BOOLEAN = 26;
  /** RegularExpression Id. */
  int NUMBER = 27;
  /** RegularExpression Id. */
  int NOSPACE = 28;
  /** RegularExpression Id. */
  int WITHSPACE = 29;
  /** RegularExpression Id. */
  int MIDLESPACE = 30;
  /** RegularExpression Id. */
  int FINALSTR = 31;
  /** RegularExpression Id. */
  int IDENT = 32;
  /** RegularExpression Id. */
  int STRING = 33;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"remove\"",
    "\"set\"",
    "\"add\"",
    "\"create\"",
    "\"replace\"",
    "\"getValue\"",
    "\"?NUM\"",
    "\"?STR\"",
    "\"?BOOL\"",
    "\"void\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\":=\"",
    "\"+\"",
    "\"-\"",
    "\"+=\"",
    "\"-=\"",
    "\"\\n\"",
    "<DIGIT>",
    "<LETTER>",
    "<BOOLEAN>",
    "<NUMBER>",
    "<NOSPACE>",
    "<WITHSPACE>",
    "<MIDLESPACE>",
    "<FINALSTR>",
    "<IDENT>",
    "<STRING>",
  };

}
